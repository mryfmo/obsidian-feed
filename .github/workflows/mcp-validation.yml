name: MCP Validation

on:
  pull_request:
    paths:
      - '.mcp/**'
      - 'tools/*.sh'
      - 'MCP_DOCUMENTATION.md'
  push:
    branches:
      - main
      - master
    paths:
      - '.mcp/**'
      - 'tools/*.sh'

jobs:
  validate-mcp-integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
      - uses: actions/checkout@v4
        
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Install dependencies
        run: |
          cd .mcp
          pnpm install
          
      - name: Run MCP tests
        run: |
          cd .mcp
          pnpm test
          
      - name: Test MCP bridge fallback
        run: |
          # Test that bridge falls back to shell scripts when MCP unavailable
          cd .mcp
          NODE_ENV=test npx tsx bridge.ts list_guards
          
      - name: Validate shell script compatibility
        run: |
          # Ensure all shell scripts work on Ubuntu
          ./tools/list_guards.sh
          echo "FETCH: Test" > test-turn.md
          echo "<think>This is a test with enough words to pass validation</think>" >> test-turn.md
          echo "<act>Test action</act>" >> test-turn.md
          ./tools/turn_guard.sh test-turn.md || true
          rm -f test-turn.md
          
      - name: Check MCP documentation consistency
        run: |
          # Verify that MCP_DOCUMENTATION.md accurately reflects implementation
          if [ -f MCP_DOCUMENTATION.md ]; then
            echo "✅ MCP documentation found"
            # Check for required sections
            grep -q "Phase 2: Enhancement" MCP_DOCUMENTATION.md || exit 1
            grep -q "26 validation guards" MCP_DOCUMENTATION.md || exit 1
            grep -q "5 MCP servers integrated" MCP_DOCUMENTATION.md || exit 1
          else
            echo "❌ MCP_DOCUMENTATION.md not found"
            exit 1
          fi