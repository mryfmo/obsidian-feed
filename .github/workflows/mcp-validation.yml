name: MCP Validation

on:
  pull_request:
    paths:
      - '.claude/mcp-integration/**'
      - '.claude/validation/**'
      - 'tools/*.sh'
  push:
    branches:
      - main
      - master
    paths:
      - '.claude/mcp-integration/**'
      - '.claude/validation/**'
      - 'tools/*.sh'

jobs:
  validate-mcp-integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: |
          cd .claude/mcp-integration
          pnpm install

      - name: Run MCP tests
        run: |
          cd .claude/mcp-integration
          pnpm test

      - name: Test MCP bridge fallback
        run: |
          # Test that bridge falls back to shell scripts when MCP unavailable
          cd .claude/mcp-integration
          NODE_ENV=test npx tsx bridge.ts list_guards

      - name: Validate shell script compatibility
        run: |
          # Ensure all shell scripts work on Ubuntu
          ./.claude/validation/list-guards.sh
          echo "FETCH: Test" > test-turn.md
          echo "<think>This is a test with enough words to pass validation</think>" >> test-turn.md
          echo "<act>Test action</act>" >> test-turn.md
          ./.claude/validation/turn-guard.sh test-turn.md || true
          rm -f test-turn.md
